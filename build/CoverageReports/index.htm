<!DOCTYPE html>
<html data-ng-app="coverageApp">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EDGE,chrome=1" />
<title>Summary - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
</head><body data-ng-controller="SummaryViewCtrl"><div class="container"><div class="containerleft">
<h1>Summary</h1>
<table class="overview table-fixed">
<colgroup>
<col class="column135" />
<col />
</colgroup>
<tbody>
<tr><th>Generated on:</th><td>2/6/2017 - 1:53:51 PM</td></tr>
<tr><th>Parser:</th><td>DynamicCodeCoverageParser</td></tr>
<tr><th>Assemblies:</th><td>1</td></tr>
<tr><th>Classes:</th><td>48</td></tr>
<tr><th>Files:</th><td>15</td></tr>
<tr><th>Covered lines:</th><td>4007</td></tr>
<tr><th>Uncovered lines:</th><td>169</td></tr>
<tr><th>Coverable lines:</th><td>4176</td></tr>
<tr><th>Total lines:</th><td>17354</td></tr>
<tr><th>Line coverage:</th><td>95.9%</td></tr>
</tbody>
</table>
<h1>Assemblies</h1>
<div data-ng-if="filteringEnabled" data-reactive-table data-assemblies="assemblies" data-branch-coverage-available="branchCoverageAvailable"></div>
<div data-ng-if="!filteringEnabled">
<div class="ng-hide customizebox" data-ng-show="true"><input data-ng-click="enableFiltering()" value="Enable filtering" title="This may take some time since the report contains many classes." type="submit" /></div>
</div>
<table data-ng-if="!filteringEnabled" class="overview table-fixed">
<colgroup>
<col />
<col class="column90" />
<col class="column105" />
<col class="column100" />
<col class="column70" />
<col class="column60" />
<col class="column112" />
</colgroup>
<thead><tr><th>Name</th><th class="right">Covered</th><th class="right">Uncovered</th><th class="right">Coverable</th><th class="right">Total</th><th class="center" colspan="2">Line coverage</th></tr></thead>
<tbody>
<tr><th>unittest.library.desktop.dll</th><th class="right">4007</th><th class="right">169</th><th class="right">4176</th><th class="right">17354</th><th title="LineCoverage" class="right">95.9%</th><th><table class="coverage"><tr><td class="green covered96">&nbsp;</td><td class="red covered4">&nbsp;</td></tr></table></th></tr>
<tr><td><a href="unittest.library.desktop.dll_DefaultHash_char___.htm">DefaultHash&lt;char *&gt;</a></td><td class="right">12</td><td class="right">0</td><td class="right">12</td><td class="right">40</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_DefaultHash_int___.htm">DefaultHash&lt;int *&gt;</a></td><td class="right">10</td><td class="right">0</td><td class="right">10</td><td class="right">22</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_DefaultHash_int_.htm">DefaultHash&lt;int&gt;</a></td><td class="right">10</td><td class="right">0</td><td class="right">10</td><td class="right">22</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_DefaultHash_std__basic_string_char_std__char_traits_char__std__allocator_char_____.htm">DefaultHash&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</a></td><td class="right">10</td><td class="right">0</td><td class="right">10</td><td class="right">40</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_DefaultHash_UnitTestLibraryDesktop__Foo_.htm">DefaultHash&lt;UnitTestLibraryDesktop::Foo&gt;</a></td><td class="right">12</td><td class="right">0</td><td class="right">12</td><td class="right">25</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Foo.htm">Foo</a></td><td class="right">23</td><td class="right">3</td><td class="right">26</td><td class="right">47</td><td title="LineCoverage" class="right">88.4%</td><td><table class="coverage"><tr><td class="green covered88">&nbsp;</td><td class="red covered12">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_char___int_MahatmaGameEngine__DefaultHash_char_____.htm">HashMap&lt;char *,int,MahatmaGameEngine::DefaultHash&lt;char *&gt; &gt;</a></td><td class="right">72</td><td class="right">1</td><td class="right">73</td><td class="right">254</td><td title="LineCoverage" class="right">98.6%</td><td><table class="coverage"><tr><td class="green covered99">&nbsp;</td><td class="red covered1">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_char___int_MahatmaGameEngine__DefaultHash_char_______Iterator.htm">HashMap&lt;char *,int,MahatmaGameEngine::DefaultHash&lt;char *&gt; &gt;::Iterator</a></td><td class="right">35</td><td class="right">9</td><td class="right">44</td><td class="right">738</td><td title="LineCoverage" class="right">79.5%</td><td><table class="coverage"><tr><td class="green covered80">&nbsp;</td><td class="red covered20">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_int_int_MahatmaGameEngine__DefaultHash_int___.htm">HashMap&lt;int,int,MahatmaGameEngine::DefaultHash&lt;int&gt; &gt;</a></td><td class="right">71</td><td class="right">2</td><td class="right">73</td><td class="right">254</td><td title="LineCoverage" class="right">97.2%</td><td><table class="coverage"><tr><td class="green covered97">&nbsp;</td><td class="red covered3">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_int_int_MahatmaGameEngine__DefaultHash_int_____Iterator.htm">HashMap&lt;int,int,MahatmaGameEngine::DefaultHash&lt;int&gt; &gt;::Iterator</a></td><td class="right">42</td><td class="right">2</td><td class="right">44</td><td class="right">738</td><td title="LineCoverage" class="right">95.4%</td><td><table class="coverage"><tr><td class="green covered95">&nbsp;</td><td class="red covered5">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_std__basic_string_char_std__char_traits_char__std__allocator_char____int_MahatmaGameEngine__DefaultHash_std__basic_string_char_std__char_traits_char__std__allocator_char_______.htm">HashMap&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,MahatmaGameEngine::DefaultHash&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;</a></td><td class="right">71</td><td class="right">2</td><td class="right">73</td><td class="right">254</td><td title="LineCoverage" class="right">97.2%</td><td><table class="coverage"><tr><td class="green covered97">&nbsp;</td><td class="red covered3">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_std__basic_string_char_std__char_traits_char__std__allocator_char____int_MahatmaGameEngine__DefaultHash_std__basic_string_char_std__char_traits_char__std__allocator_char_________Iterator.htm">HashMap&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int,MahatmaGameEngine::DefaultHash&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::Iterator</a></td><td class="right">42</td><td class="right">2</td><td class="right">44</td><td class="right">738</td><td title="LineCoverage" class="right">95.4%</td><td><table class="coverage"><tr><td class="green covered95">&nbsp;</td><td class="red covered5">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_UnitTestLibraryDesktop__Foo_int_MahatmaGameEngine__DefaultHash_UnitTestLibraryDesktop__Foo___.htm">HashMap&lt;UnitTestLibraryDesktop::Foo,int,MahatmaGameEngine::DefaultHash&lt;UnitTestLibraryDesktop::Foo&gt; &gt;</a></td><td class="right">71</td><td class="right">2</td><td class="right">73</td><td class="right">254</td><td title="LineCoverage" class="right">97.2%</td><td><table class="coverage"><tr><td class="green covered97">&nbsp;</td><td class="red covered3">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMap_UnitTestLibraryDesktop__Foo_int_MahatmaGameEngine__DefaultHash_UnitTestLibraryDesktop__Foo_____Iterator.htm">HashMap&lt;UnitTestLibraryDesktop::Foo,int,MahatmaGameEngine::DefaultHash&lt;UnitTestLibraryDesktop::Foo&gt; &gt;::Iterator</a></td><td class="right">42</td><td class="right">2</td><td class="right">44</td><td class="right">738</td><td title="LineCoverage" class="right">95.4%</td><td><table class="coverage"><tr><td class="green covered95">&nbsp;</td><td class="red covered5">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMapIteratorTest.htm">HashMapIteratorTest</a></td><td class="right">94</td><td class="right">2</td><td class="right">96</td><td class="right">165</td><td title="LineCoverage" class="right">97.9%</td><td><table class="coverage"><tr><td class="green covered98">&nbsp;</td><td class="red covered2">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_HashMapTest.htm">HashMapTest</a></td><td class="right">288</td><td class="right">2</td><td class="right">290</td><td class="right">484</td><td title="LineCoverage" class="right">99.3%</td><td><table class="coverage"><tr><td class="green covered99">&nbsp;</td><td class="red covered1">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_int___.htm">SList&lt;int *&gt;</a></td><td class="right">153</td><td class="right">0</td><td class="right">153</td><td class="right">292</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_int_____Iterator.htm">SList&lt;int *&gt;::Iterator</a></td><td class="right">51</td><td class="right">0</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_int_.htm">SList&lt;int&gt;</a></td><td class="right">153</td><td class="right">0</td><td class="right">153</td><td class="right">292</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_int___Iterator.htm">SList&lt;int&gt;::Iterator</a></td><td class="right">51</td><td class="right">0</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_char___int___.htm">SList&lt;std::pair&lt;char *,int&gt; &gt;</a></td><td class="right">73</td><td class="right">7</td><td class="right">80</td><td class="right">292</td><td title="LineCoverage" class="right">91.2%</td><td><table class="coverage"><tr><td class="green covered91">&nbsp;</td><td class="red covered9">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_char___int_____Iterator.htm">SList&lt;std::pair&lt;char *,int&gt; &gt;::Iterator</a></td><td class="right">40</td><td class="right">11</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">78.4%</td><td><table class="coverage"><tr><td class="green covered78">&nbsp;</td><td class="red covered22">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_int_int___.htm">SList&lt;std::pair&lt;int,int&gt; &gt;</a></td><td class="right">73</td><td class="right">7</td><td class="right">80</td><td class="right">292</td><td title="LineCoverage" class="right">91.2%</td><td><table class="coverage"><tr><td class="green covered91">&nbsp;</td><td class="red covered9">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_int_int_____Iterator.htm">SList&lt;std::pair&lt;int,int&gt; &gt;::Iterator</a></td><td class="right">39</td><td class="right">12</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">76.4%</td><td><table class="coverage"><tr><td class="green covered76">&nbsp;</td><td class="red covered24">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_std__basic_string_char_std__char_traits_char__std__allocator_char____int___.htm">SList&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int&gt; &gt;</a></td><td class="right">73</td><td class="right">7</td><td class="right">80</td><td class="right">292</td><td title="LineCoverage" class="right">91.2%</td><td><table class="coverage"><tr><td class="green covered91">&nbsp;</td><td class="red covered9">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_std__basic_string_char_std__char_traits_char__std__allocator_char____int_____Iterator.htm">SList&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int&gt; &gt;::Iterator</a></td><td class="right">39</td><td class="right">12</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">76.4%</td><td><table class="coverage"><tr><td class="green covered76">&nbsp;</td><td class="red covered24">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_UnitTestLibraryDesktop__Foo_int___.htm">SList&lt;std::pair&lt;UnitTestLibraryDesktop::Foo,int&gt; &gt;</a></td><td class="right">73</td><td class="right">7</td><td class="right">80</td><td class="right">292</td><td title="LineCoverage" class="right">91.2%</td><td><table class="coverage"><tr><td class="green covered91">&nbsp;</td><td class="red covered9">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_std__pair_UnitTestLibraryDesktop__Foo_int_____Iterator.htm">SList&lt;std::pair&lt;UnitTestLibraryDesktop::Foo,int&gt; &gt;::Iterator</a></td><td class="right">39</td><td class="right">12</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">76.4%</td><td><table class="coverage"><tr><td class="green covered76">&nbsp;</td><td class="red covered24">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_UnitTestLibraryDesktop__Foo_.htm">SList&lt;UnitTestLibraryDesktop::Foo&gt;</a></td><td class="right">153</td><td class="right">0</td><td class="right">153</td><td class="right">292</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SList_UnitTestLibraryDesktop__Foo___Iterator.htm">SList&lt;UnitTestLibraryDesktop::Foo&gt;::Iterator</a></td><td class="right">51</td><td class="right">0</td><td class="right">51</td><td class="right">110</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SListIteratorTest.htm">SListIteratorTest</a></td><td class="right">224</td><td class="right">2</td><td class="right">226</td><td class="right">409</td><td title="LineCoverage" class="right">99.1%</td><td><table class="coverage"><tr><td class="green covered99">&nbsp;</td><td class="red covered1">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_SListTest.htm">SListTest</a></td><td class="right">480</td><td class="right">2</td><td class="right">482</td><td class="right">796</td><td title="LineCoverage" class="right">99.5%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_int___.htm">Vector&lt;int *&gt;</a></td><td class="right">105</td><td class="right">7</td><td class="right">112</td><td class="right">554</td><td title="LineCoverage" class="right">93.7%</td><td><table class="coverage"><tr><td class="green covered94">&nbsp;</td><td class="red covered6">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_int_____Iterator.htm">Vector&lt;int *&gt;::Iterator</a></td><td class="right">47</td><td class="right">0</td><td class="right">47</td><td class="right">554</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_int_.htm">Vector&lt;int&gt;</a></td><td class="right">104</td><td class="right">7</td><td class="right">111</td><td class="right">554</td><td title="LineCoverage" class="right">93.6%</td><td><table class="coverage"><tr><td class="green covered94">&nbsp;</td><td class="red covered6">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_int___Iterator.htm">Vector&lt;int&gt;::Iterator</a></td><td class="right">47</td><td class="right">0</td><td class="right">47</td><td class="right">554</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_char___int_____.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;char *,int&gt; &gt; &gt;</a></td><td class="right">57</td><td class="right">5</td><td class="right">62</td><td class="right">554</td><td title="LineCoverage" class="right">91.9%</td><td><table class="coverage"><tr><td class="green covered92">&nbsp;</td><td class="red covered8">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_char___int_______Iterator.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;char *,int&gt; &gt; &gt;::Iterator</a></td><td class="right">22</td><td class="right">4</td><td class="right">26</td><td class="right">554</td><td title="LineCoverage" class="right">84.6%</td><td><table class="coverage"><tr><td class="green covered85">&nbsp;</td><td class="red covered15">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_int_int_____.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;int,int&gt; &gt; &gt;</a></td><td class="right">57</td><td class="right">5</td><td class="right">62</td><td class="right">554</td><td title="LineCoverage" class="right">91.9%</td><td><table class="coverage"><tr><td class="green covered92">&nbsp;</td><td class="red covered8">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_int_int_______Iterator.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;int,int&gt; &gt; &gt;::Iterator</a></td><td class="right">22</td><td class="right">4</td><td class="right">26</td><td class="right">554</td><td title="LineCoverage" class="right">84.6%</td><td><table class="coverage"><tr><td class="green covered85">&nbsp;</td><td class="red covered15">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_std__basic_string_char_std__char_traits_char__std__allocator_char____int_____.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int&gt; &gt; &gt;</a></td><td class="right">57</td><td class="right">5</td><td class="right">62</td><td class="right">554</td><td title="LineCoverage" class="right">91.9%</td><td><table class="coverage"><tr><td class="green covered92">&nbsp;</td><td class="red covered8">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_std__basic_string_char_std__char_traits_char__std__allocator_char____int_______Iterator.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,int&gt; &gt; &gt;::Iterator</a></td><td class="right">22</td><td class="right">4</td><td class="right">26</td><td class="right">554</td><td title="LineCoverage" class="right">84.6%</td><td><table class="coverage"><tr><td class="green covered85">&nbsp;</td><td class="red covered15">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_UnitTestLibraryDesktop__Foo_int_____.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;UnitTestLibraryDesktop::Foo,int&gt; &gt; &gt;</a></td><td class="right">57</td><td class="right">5</td><td class="right">62</td><td class="right">554</td><td title="LineCoverage" class="right">91.9%</td><td><table class="coverage"><tr><td class="green covered92">&nbsp;</td><td class="red covered8">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_MahatmaGameEngine__SList_std__pair_UnitTestLibraryDesktop__Foo_int_______Iterator.htm">Vector&lt;MahatmaGameEngine::SList&lt;std::pair&lt;UnitTestLibraryDesktop::Foo,int&gt; &gt; &gt;::Iterator</a></td><td class="right">22</td><td class="right">4</td><td class="right">26</td><td class="right">554</td><td title="LineCoverage" class="right">84.6%</td><td><table class="coverage"><tr><td class="green covered85">&nbsp;</td><td class="red covered15">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_UnitTestLibraryDesktop__Foo_.htm">Vector&lt;UnitTestLibraryDesktop::Foo&gt;</a></td><td class="right">106</td><td class="right">7</td><td class="right">113</td><td class="right">554</td><td title="LineCoverage" class="right">93.8%</td><td><table class="coverage"><tr><td class="green covered94">&nbsp;</td><td class="red covered6">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_Vector_UnitTestLibraryDesktop__Foo___Iterator.htm">Vector&lt;UnitTestLibraryDesktop::Foo&gt;::Iterator</a></td><td class="right">47</td><td class="right">0</td><td class="right">47</td><td class="right">554</td><td title="LineCoverage" class="right">100%</td><td><table class="coverage"><tr><td class="green covered100">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_VectorIteratorTest.htm">VectorIteratorTest</a></td><td class="right">206</td><td class="right">2</td><td class="right">208</td><td class="right">291</td><td title="LineCoverage" class="right">99%</td><td><table class="coverage"><tr><td class="green covered99">&nbsp;</td><td class="red covered1">&nbsp;</td></tr></table></td></tr>
<tr><td><a href="unittest.library.desktop.dll_VectorTest.htm">VectorTest</a></td><td class="right">359</td><td class="right">2</td><td class="right">361</td><td class="right">475</td><td title="LineCoverage" class="right">99.4%</td><td><table class="coverage"><tr><td class="green covered99">&nbsp;</td><td class="red covered1">&nbsp;</td></tr></table></td></tr>
</tbody>
</table>
<div class="footer">Generated by: ReportGenerator 2.5.2.0<br />2/6/2017 - 1:53:51 PM<br /><a href="https://github.com/danielpalme/ReportGenerator">GitHub</a> | <a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div></div>
<script type="text/javascript" src="combined.js"></script>
</body></html>