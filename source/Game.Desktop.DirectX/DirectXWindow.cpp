/** Sample calss created to check if a DirectX Window can be generated by this project.*/

#include "pch.h"

#include "DirectXWindow.h"
#include "SList.h"
#include <windowsx.h>

int WINAPI WinMain(HINSTANCE hInstance,	HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
	UNREFERENCED_PARAMETER(hPrevInstance);
	UNREFERENCED_PARAMETER(lpCmdLine);

	// The handle for the window, filled by a function
	HWND hWnd;
	// This struct holds information for the window class
	WNDCLASSEX wc;

	ZeroMemory(&wc, sizeof(WNDCLASSEX));

	wc.cbSize = sizeof(WNDCLASSEX);
	wc.style = CS_HREDRAW | CS_VREDRAW;
	wc.lpfnWndProc = WindowProc;
	wc.hInstance = hInstance;
	wc.hCursor = LoadCursor(NULL, IDC_ARROW);
	wc.hbrBackground = (HBRUSH)COLOR_WINDOW;
	wc.lpszClassName = L"SampleWindow";

	RegisterClassEx(&wc);

	// Create the window and use the result as the handle
	hWnd = CreateWindowEx(NULL,	L"SampleWindow", L"Sample Window", WS_OVERLAPPEDWINDOW,	0, 0, 
							1280, 720, NULL, NULL, hInstance, NULL);

	ShowWindow(hWnd, nCmdShow);

	MSG msg;

	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}

	// SList created on the stack to check dependency on Library.Desktop
	MahatmaGameEngine::SList(10);

	return (int)msg.wParam;
}

/** This is the main message handler for the program */
LRESULT CALLBACK WindowProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	switch (message)
	{
	case WM_DESTROY:
	{
		PostQuitMessage(0);
		return 0;
	} 
	break;
	}

	return DefWindowProc(hWnd, message, wParam, lParam);
}